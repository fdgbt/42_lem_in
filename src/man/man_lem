*** USAGE ***

Manual / Standard entry mode:
 
 ./lem-in [-v] [-ch] [...]

File map entry mode:

 ./lem-in [-v] [-ch] [...] < test.map

Generator map entry mode:

 ./generator_linux --flow-one | ./lem-in [-v] [-ch] [...]

 ./generator_linux --flow-ten | ./lem-in [-v] [-ch] [...]

 ./generator_linux --flow-thousand | ./lem-in [-v] [-ch] [...]

 ./generator_linux --big | ./lem-in [-v] [-ch] [...]

 ./generator_linux --big-superposition | ./lem-in [-v] [-ch] [...]


*** Special Graphviz Visualisator ***

 1) Enable the Visu option with "-v":

 ./lem-in -v [...] < test.map

 2) If small map, use the makefile command:
 
 make neato

 3) For big map, or to ignore the initial coordinates of the rooms, use the makefile command:
 
 make sfdp

 4) example

 ./lem-in -v [...] < test.map; make neato

Graphviz Visualisator install:

- brew install graphviz


*** Ultimate Visu-Hex ***

 Python3:
 ./lem-in [-v] [-ch] [...] < test.map | python3 src/visu/visu-hex.py -py3

 Python2:
 ./lem-in [-v] [-ch] [...] < test.map | python2 src/visu/visu-hex.py -py2

Ultimate Visu-Hex with generator mode:

 ./generator --flow-thousand | ./lem-in [-v] [-ch] [...] | python3 src/visu/visu-hex.py -py3

Ultimate Visu-Hex install:

- brew install python
- brew install pip3
- pip3 install pygame

COMMANDS:

- Use [SPACE] key to see the ants moving in live !
- Hold the Left-Click Mouse on a room to change its position in live !
- Use [F] key to enable the Newton mode, reorganizing automatically the nodes in live !
- Use [S] key to enable the score, displaying the number of laps in live !
- Use the Scroll Wheel Mouse to change the size o the rooms !


*** HELP ***

[ ]| Optional
   |   Means that all arguments are facultatives for usage.
   | Warning
   |   Each option must be activated only one time. They can be grouped together, ex: -vbs.

-c | Color
   |   Print the map and the help with contextualized colors.
   | Warning
   |   Using this option will disable the Ultimate Visualisator.

-e | Error
   |   Force the checker to stop at the first wrong line and report the corresponding error.
   | Warning
   |   Usefull when you get the error "NO PATH POSSIBLE" and don't know what is the probleme with the map.

-l | Laps
   |   Print the total number of laps, when all ants have reached the finish room.

-p | Path
   |   Print each disjoint path found by the BFS (Edmond-Karp algorithm). 
   | Warning
   |   The [start] room appears in green brackets. The [end] room appears in red brackets.
   |   Each room used more than one time will appear in red. Otherwise it will appear in blue.
   |   The path with bold font style is the path found by the special superposition algorithm.
   |   It is normal and its purpose to find room that are already used.

-d | Debug
   |   Show the cycle and the return state of the pathfinders, print all data for each path found. 
   |   Also show the best laps for each set of paths. 

-b | Bfs
   |   Print the process of the bfs algorithm.
   |   Usefull for debugging and see extra informations about the orders of rooms checked by the CLASSIC BFS.
   | Warning
   |   For the superposition algorithm, see option '-s'.

-s | Superposition
   |   Print the process of the SP algorithm.
   |   Usefull for debugging and see extra informations about the orders of rooms checked by the BFS SP.
   | Warning
   |   There is two separate algorithms, run one after the other.
   |   The first one is called the "CLASSIC BFS", following the Edmond Karp Algorithm, to find the shortest paths.
   |   The second one is called "BFS SP", as it also use a bfs system, but has been adapted to solve the superposition problem.

-f | Fifo
   |   Print the current state of the CLASSIC BFS stack after each room checked.
   | Warning
   |   Very long verbose with big map.

-i | heap ("hIp")
   |   Print the current state of the BFS SP heap after each room checked.
   | Warning
   |   Very very long verbose with big map. And very very very long if "-f" and "-i" options are used together.

-h | Help
   |   Print usage examples + options description + additional support texts.
   | Warning
   |   Using this option will disable the Ultimate Visualisator and stop the lem-in program.

-v | Visu
   |   Generates the .dot file, needed for the "neato" and "sfdp" program. See Graphviz.
   | Warning
   |   Do not forget to use the makefile command after lem-in finished (see usage).


*** TIPS ***

- To precompute the map before to launch the Ultimate Visualisator:

 1) open src/visu/visu-hex.py
 2) line 8, FDA_Origin = 0
 3) change to FDA_Origin = 50

- To quit the Ultimate Visualisator while the map is freezing (too big):

 Press "[CMD] + [C]" in the terminal.
